package com.webank.webase.chain.mgr.repository.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import com.webank.webase.chain.mgr.repository.bean.TbHost;

public interface TbHostMapper {

    @Delete({
            "delete from tb_host",
            "where ext_agency_id = #{extAgencyId,jdbcType=INTEGER}"
    })
    int deleteByExtAgencyId(@Param("extAgencyId") Integer extAgencyId);

    @Select({
            "select",
            TbHostSqlProvider.ALL_COLUMN_FIELDS,
            "from tb_host",
            "where ext_agency_id = #{extAgencyId,jdbcType=INTEGER}"
    })
    List<TbHost> selectByExtAgencyId(@Param("extAgencyId") int extAgencyId);

    @Select({
            "select",
            TbHostSqlProvider.ALL_COLUMN_FIELDS,
            "from tb_host",
            "where ext_agency_id=#{extAgencyId,jdbcType=INTEGER} and ip = #{ip,jdbcType=VARCHAR}"
    })
    TbHost getByAgencyIdAndIp(@Param("extAgencyId") int extAgencyId,@Param("ip") String ip);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_host
     *
     * @mbg.generated
     */
    @Delete({ "delete from tb_host", "where id = #{id,jdbcType=INTEGER}" })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_host
     *
     * @mbg.generated
     */
    @InsertProvider(type = TbHostSqlProvider.class, method = "insertSelective")
    @SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "id", before = false, resultType = Integer.class)
    int insertSelective(TbHost record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_host
     *
     * @mbg.generated
     */
    @Select({ "select", "id, ext_agency_id, ext_agency_name, ip, ssh_user, ssh_port, root_dir, docker_port, ", "host_status, create_time, modify_time", "from tb_host", "where id = #{id,jdbcType=INTEGER}" })
    @Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true), @Result(column = "ext_agency_id", property = "extAgencyId", jdbcType = JdbcType.INTEGER), @Result(column = "ext_agency_name", property = "extAgencyName", jdbcType = JdbcType.VARCHAR), @Result(column = "ip", property = "ip", jdbcType = JdbcType.VARCHAR), @Result(column = "ssh_user", property = "sshUser", jdbcType = JdbcType.VARCHAR), @Result(column = "ssh_port", property = "sshPort", jdbcType = JdbcType.INTEGER), @Result(column = "root_dir", property = "rootDir", jdbcType = JdbcType.VARCHAR), @Result(column = "docker_port", property = "dockerPort", jdbcType = JdbcType.INTEGER), @Result(column = "host_status", property = "hostStatus", jdbcType = JdbcType.TINYINT), @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.TIMESTAMP), @Result(column = "modify_time", property = "modifyTime", jdbcType = JdbcType.TIMESTAMP) })
    TbHost selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_host
     *
     * @mbg.generated
     */
    @UpdateProvider(type = TbHostSqlProvider.class, method = "updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TbHost record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_host
     *
     * @mbg.generated
     */
    @Options(useGeneratedKeys = true, keyProperty = "id", keyColumn = "id")
    @Insert({ "<script>", "insert into tb_host (ext_agency_id, ", "ext_agency_name, ip, ", "ssh_user, ssh_port, ", "root_dir, docker_port, ", "host_status, create_time, ", "modify_time)", "values<foreach collection=\"list\" item=\"detail\" index=\"index\" separator=\",\">(#{detail.extAgencyId,jdbcType=INTEGER}, ", "#{detail.extAgencyName,jdbcType=VARCHAR}, #{detail.ip,jdbcType=VARCHAR}, ", "#{detail.sshUser,jdbcType=VARCHAR}, #{detail.sshPort,jdbcType=INTEGER}, ", "#{detail.rootDir,jdbcType=VARCHAR}, #{detail.dockerPort,jdbcType=INTEGER}, ", "#{detail.hostStatus,jdbcType=TINYINT}, #{detail.createTime,jdbcType=TIMESTAMP}, ", "#{detail.modifyTime,jdbcType=TIMESTAMP})</foreach></script>" })
    int batchInsert(java.util.List<TbHost> list);
}
