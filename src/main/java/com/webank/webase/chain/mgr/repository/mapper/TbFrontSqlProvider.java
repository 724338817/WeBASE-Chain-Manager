package com.webank.webase.chain.mgr.repository.mapper;

import org.apache.ibatis.jdbc.SQL;
import com.webank.webase.chain.mgr.repository.bean.TbFront;

public class TbFrontSqlProvider {

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_front
     *
     * @mbg.generated
     */
    public static final String ALL_COLUMN_FIELDS = "front_id,chain_id,node_id,front_ip,front_port,agency,description,create_time,modify_time,front_status,agency_id,host_id,host_index,version,container_name,jsonrpc_port,p2p_port,channel_port,chain_name";

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_front
     *
     * @mbg.generated
     */
    public String insertSelective(TbFront record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("tb_front");
        if (record.getChainId() != null) {
            sql.VALUES("chain_id", "#{chainId,jdbcType=INTEGER}");
        }
        if (record.getNodeId() != null) {
            sql.VALUES("node_id", "#{nodeId,jdbcType=VARCHAR}");
        }
        if (record.getFrontIp() != null) {
            sql.VALUES("front_ip", "#{frontIp,jdbcType=VARCHAR}");
        }
        if (record.getFrontPort() != null) {
            sql.VALUES("front_port", "#{frontPort,jdbcType=INTEGER}");
        }
        if (record.getAgency() != null) {
            sql.VALUES("agency", "#{agency,jdbcType=VARCHAR}");
        }
        if (record.getDescription() != null) {
            sql.VALUES("description", "#{description,jdbcType=VARCHAR}");
        }
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getModifyTime() != null) {
            sql.VALUES("modify_time", "#{modifyTime,jdbcType=TIMESTAMP}");
        }
        if (record.getFrontStatus() != null) {
            sql.VALUES("front_status", "#{frontStatus,jdbcType=INTEGER}");
        }
        if (record.getAgencyId() != null) {
            sql.VALUES("agency_id", "#{agencyId,jdbcType=INTEGER}");
        }
        if (record.getHostId() != null) {
            sql.VALUES("host_id", "#{hostId,jdbcType=INTEGER}");
        }
        if (record.getHostIndex() != null) {
            sql.VALUES("host_index", "#{hostIndex,jdbcType=INTEGER}");
        }
        if (record.getVersion() != null) {
            sql.VALUES("version", "#{version,jdbcType=VARCHAR}");
        }
        if (record.getContainerName() != null) {
            sql.VALUES("container_name", "#{containerName,jdbcType=VARCHAR}");
        }
        if (record.getJsonrpcPort() != null) {
            sql.VALUES("jsonrpc_port", "#{jsonrpcPort,jdbcType=INTEGER}");
        }
        if (record.getP2pPort() != null) {
            sql.VALUES("p2p_port", "#{p2pPort,jdbcType=INTEGER}");
        }
        if (record.getChannelPort() != null) {
            sql.VALUES("channel_port", "#{channelPort,jdbcType=INTEGER}");
        }
        if (record.getChainName() != null) {
            sql.VALUES("chain_name", "#{chainName,jdbcType=VARCHAR}");
        }
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_front
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(TbFront record) {
        SQL sql = new SQL();
        sql.UPDATE("tb_front");
        if (record.getChainId() != null) {
            sql.SET("chain_id = #{chainId,jdbcType=INTEGER}");
        }
        if (record.getNodeId() != null) {
            sql.SET("node_id = #{nodeId,jdbcType=VARCHAR}");
        }
        if (record.getFrontIp() != null) {
            sql.SET("front_ip = #{frontIp,jdbcType=VARCHAR}");
        }
        if (record.getFrontPort() != null) {
            sql.SET("front_port = #{frontPort,jdbcType=INTEGER}");
        }
        if (record.getAgency() != null) {
            sql.SET("agency = #{agency,jdbcType=VARCHAR}");
        }
        if (record.getDescription() != null) {
            sql.SET("description = #{description,jdbcType=VARCHAR}");
        }
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getModifyTime() != null) {
            sql.SET("modify_time = #{modifyTime,jdbcType=TIMESTAMP}");
        }
        if (record.getFrontStatus() != null) {
            sql.SET("front_status = #{frontStatus,jdbcType=INTEGER}");
        }
        if (record.getAgencyId() != null) {
            sql.SET("agency_id = #{agencyId,jdbcType=INTEGER}");
        }
        if (record.getHostId() != null) {
            sql.SET("host_id = #{hostId,jdbcType=INTEGER}");
        }
        if (record.getHostIndex() != null) {
            sql.SET("host_index = #{hostIndex,jdbcType=INTEGER}");
        }
        if (record.getVersion() != null) {
            sql.SET("version = #{version,jdbcType=VARCHAR}");
        }
        if (record.getContainerName() != null) {
            sql.SET("container_name = #{containerName,jdbcType=VARCHAR}");
        }
        if (record.getJsonrpcPort() != null) {
            sql.SET("jsonrpc_port = #{jsonrpcPort,jdbcType=INTEGER}");
        }
        if (record.getP2pPort() != null) {
            sql.SET("p2p_port = #{p2pPort,jdbcType=INTEGER}");
        }
        if (record.getChannelPort() != null) {
            sql.SET("channel_port = #{channelPort,jdbcType=INTEGER}");
        }
        if (record.getChainName() != null) {
            sql.SET("chain_name = #{chainName,jdbcType=VARCHAR}");
        }
        sql.WHERE("front_id = #{frontId,jdbcType=INTEGER}");
        return sql.toString();
    }
}
