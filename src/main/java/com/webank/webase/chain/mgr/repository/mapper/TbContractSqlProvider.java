package com.webank.webase.chain.mgr.repository.mapper;

import org.apache.commons.collections4.CollectionUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.ibatis.jdbc.SQL;
import com.webank.webase.chain.mgr.contract.entity.ContractParam;
import com.webank.webase.chain.mgr.repository.bean.TbContract;

import java.util.stream.Collectors;

public class TbContractSqlProvider {

    public String getByParam(ContractParam param) {
        SQL sql = new SQL();
        sql.SELECT(ALL_COLUMN_FIELDS).FROM("tb_contract");
        this.applyContractParam(sql, param);
        return sql.toString();
    }

    public String selectByParam(ContractParam param) {
        SQL sql = new SQL();
        sql.SELECT(ALL_COLUMN_FIELDS).FROM("tb_contract");
        this.applyContractParam(sql, param);
        return sql.toString();
    }

    public String countByParam(ContractParam param) {
        SQL sql = new SQL();
        sql.SELECT("count(1)").FROM("tb_contract");
        this.applyContractParam(sql, param);
        return sql.toString();
    }

    public SQL applyContractParam(SQL sql, ContractParam param) {
        if (param.getContractId() != null) {
            sql.WHERE("contract_id = #{contractId}");
        }
        if (param.getChainId() != null) {
            sql.WHERE("chain_id = #{chainId}");
        }
        if (param.getGroupId() != null) {
            sql.WHERE("group_id = #{groupId}");
        }
        if (StringUtils.isNotBlank(param.getContractName())) {
            sql.WHERE("contract_name = #{contractName}");
        }
        if (StringUtils.isNotBlank(param.getContractAddress())) {
            sql.WHERE("contract_address = #{contractAddress}");
        }
        if (StringUtils.isNotBlank(param.getContractPath())) {
            sql.WHERE("contract_path = #{contractPath}");
        }
        if (param.getContractType() != null) {
            sql.WHERE("contract_type = #{contractType}");
        }
        if (param.getContractStatus() != null) {
            sql.WHERE("contract_status = #{contractStatus}");
        }
        if(!CollectionUtils.isEmpty(param.getContractIdList())){
            sql.WHERE(String.format("contract_id in(%s)", StringUtils.join(param.getContractIdList(),",",0,param.getContractIdList().size())));
        }
        if (StringUtils.isNotBlank(param.getFlagSortedByTime())) {
            sql.ORDER_BY(String.format("modify_time %s",param.getFlagSortedByTime()));
        }
        return sql;
    }

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public static final String ALL_COLUMN_FIELDS = "contract_id,contract_path,contract_name,chain_id,group_id,contract_address,deploy_time,contract_status,contract_type,description,create_time,modify_time,contract_source,contract_abi,contract_bin,bytecode_bin";

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String insertSelective(TbContract record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("tb_contract");
        if (record.getContractPath() != null) {
            sql.VALUES("contract_path", "#{contractPath,jdbcType=VARCHAR}");
        }
        if (record.getContractName() != null) {
            sql.VALUES("contract_name", "#{contractName,jdbcType=VARCHAR}");
        }
        if (record.getChainId() != null) {
            sql.VALUES("chain_id", "#{chainId,jdbcType=INTEGER}");
        }
        if (record.getGroupId() != null) {
            sql.VALUES("group_id", "#{groupId,jdbcType=INTEGER}");
        }
        if (record.getContractAddress() != null) {
            sql.VALUES("contract_address", "#{contractAddress,jdbcType=VARCHAR}");
        }
        if (record.getDeployTime() != null) {
            sql.VALUES("deploy_time", "#{deployTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractStatus() != null) {
            sql.VALUES("contract_status", "#{contractStatus,jdbcType=TINYINT}");
        }
        if (record.getContractType() != null) {
            sql.VALUES("contract_type", "#{contractType,jdbcType=TINYINT}");
        }
        if (record.getDescription() != null) {
            sql.VALUES("description", "#{description,jdbcType=VARCHAR}");
        }
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getModifyTime() != null) {
            sql.VALUES("modify_time", "#{modifyTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractSource() != null) {
            sql.VALUES("contract_source", "#{contractSource,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractAbi() != null) {
            sql.VALUES("contract_abi", "#{contractAbi,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractBin() != null) {
            sql.VALUES("contract_bin", "#{contractBin,jdbcType=LONGVARCHAR}");
        }
        if (record.getBytecodeBin() != null) {
            sql.VALUES("bytecode_bin", "#{bytecodeBin,jdbcType=LONGVARCHAR}");
        }
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_contract
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(TbContract record) {
        SQL sql = new SQL();
        sql.UPDATE("tb_contract");
        if (record.getContractPath() != null) {
            sql.SET("contract_path = #{contractPath,jdbcType=VARCHAR}");
        }
        if (record.getContractName() != null) {
            sql.SET("contract_name = #{contractName,jdbcType=VARCHAR}");
        }
        if (record.getChainId() != null) {
            sql.SET("chain_id = #{chainId,jdbcType=INTEGER}");
        }
        if (record.getGroupId() != null) {
            sql.SET("group_id = #{groupId,jdbcType=INTEGER}");
        }
        if (record.getContractAddress() != null) {
            sql.SET("contract_address = #{contractAddress,jdbcType=VARCHAR}");
        }
        if (record.getDeployTime() != null) {
            sql.SET("deploy_time = #{deployTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractStatus() != null) {
            sql.SET("contract_status = #{contractStatus,jdbcType=TINYINT}");
        }
        if (record.getContractType() != null) {
            sql.SET("contract_type = #{contractType,jdbcType=TINYINT}");
        }
        if (record.getDescription() != null) {
            sql.SET("description = #{description,jdbcType=VARCHAR}");
        }
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        if (record.getModifyTime() != null) {
            sql.SET("modify_time = #{modifyTime,jdbcType=TIMESTAMP}");
        }
        if (record.getContractSource() != null) {
            sql.SET("contract_source = #{contractSource,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractAbi() != null) {
            sql.SET("contract_abi = #{contractAbi,jdbcType=LONGVARCHAR}");
        }
        if (record.getContractBin() != null) {
            sql.SET("contract_bin = #{contractBin,jdbcType=LONGVARCHAR}");
        }
        if (record.getBytecodeBin() != null) {
            sql.SET("bytecode_bin = #{bytecodeBin,jdbcType=LONGVARCHAR}");
        }
        sql.WHERE("contract_id = #{contractId,jdbcType=INTEGER}");
        return sql.toString();
    }
}
